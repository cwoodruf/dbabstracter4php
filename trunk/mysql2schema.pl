#!/usr/bin/perl
# purpose of this script is to read mysql CREATE TABLE statements and 
# make a schema file from them 

# if you use the form {tablename}_id for the primary key for Entity tables
# (ie where there is only one key) this will correctly add the table
# but this can be added by hand later

use strict;
my (@fields, %schema, @keys);
print <<PHP;
<?php
#autogenerated by mysql2schema.pl

# define the constants elsewhere - preferably where outsiders can't see them
\$db = array(
	'host' => DBHOST,
	'login' => DBLOGIN,
	'pw' => DBPW,
	'db' => DBNAME,
);

\$schema = array();

PHP

while (<>) {
	if (/^CREATE TABLE/.../^\).*;$/) {
		if (/^CREATE TABLE `([^`]+)`/) {
			my $table = $1;
			if (scalar(@fields)) { &printschema(); }
			print "\$schema['$table'] = array(\n";

		} elsif (/^\s*`([^`]*)` (\w+)(?:\((\d*)\)|)/) {
			my ($field,$type,$size) = ($1,$2,$3);
			if ($field =~ /date|time/) {
				$size = 20;
			}
			$schema{$field} =  { type => "'$type'", size => $size };
			if ($field =~ /text/) {
				@schema{qw/rows cols/} = (5, 60);
			}
			push @fields, $field;

		} elsif (/^\s*PRIMARY KEY\s+\(([^\)]*)\)/) {
			my $keys = $1;
			$keys =~ s/`//g;
			@keys = split ',', $keys;
			if (scalar(@keys) == 1) {
				foreach my $field (keys %schema) {
					if ($field =~ m/^($keys)$/) {
						$schema{$field}{key} = 'true';
					}
				}
			} else {
				print "\t'PRIMARY KEY' => array(";
				foreach my $key (@keys) {
					my $tb;
					if ($key =~ /(\w+)_id/) {
						$tb = $1;
					}
					print "'$key' => '$tb', ";
				}
				print "),\n";
			}
		}	
	}
}

&printschema if scalar @fields;


sub printschema {
	foreach my $field (@fields) {
		print "\t'$field' => array( ";
		foreach my $prop (qw/type size rows cols key/) {
			next unless defined $schema{$field}{$prop};
			print "'$prop' => $schema{$field}{$prop}, ";
		}
		print "),\n";
	}
	print ");\n\n";
	%schema = ();
	@fields = ();
}

